"use client"

import React, { useState } from 'react'
import { motion, AnimatePresence } from 'framer-motion'
import { 
  User, 
  History, 
  CreditCard, 
  Settings, 
  Menu, 
  X, 
  Moon, 
  Sun, 
  Download, 
  MessageSquare,
  Grid3X3,
  List,
  ChevronRight,
  Zap,
  Crown,
  Building2,
  Bell,
  BarChart3,
  Brain,
  Keyboard,
  Eye,
  Trash2,
  Lock
} from 'lucide-react'
import { Button } from '@/components/ui/button'
import { Card } from '@/components/ui/card'
import { Avatar } from '@/components/ui/avatar'
import { Badge } from '@/components/ui/badge'
import { Switch } from '@/components/ui/switch'
import { Separator } from '@/components/ui/separator'
import { Progress } from '@/components/ui/progress'

interface SidebarItem {
  id: string
  label: string
  icon: React.ComponentType<{ className?: string }>
  badge?: string
}

interface Screenshot {
  id: string
  url: string
  timestamp: Date
  chatCount: number
  title: string
}

interface Plan {
  name: string
  price: string
  features: string[]
  current: boolean
}

const sidebarItems: SidebarItem[] = [
  { id: 'profile', label: 'Profile', icon: User },
  { id: 'history', label: 'History', icon: History, badge: '12' },
  { id: 'billing', label: 'Billing & Plan', icon: CreditCard },
  { id: 'settings', label: 'Settings', icon: Settings }
]

const mockScreenshots: Screenshot[] = [
  {
    id: '1',
    url: 'https://images.unsplash.com/photo-1551288049-bebda4e38f71?w=400&h=300&fit=crop',
    timestamp: new Date('2024-01-15T10:30:00'),
    chatCount: 3,
    title: 'Dashboard Analytics'
  },
  {
    id: '2',
    url: 'https://images.unsplash.com/photo-1460925895917-afdab827c52f?w=400&h=300&fit=crop',
    timestamp: new Date('2024-01-14T15:45:00'),
    chatCount: 1,
    title: 'Chart Analysis'
  },
  {
    id: '3',
    url: 'https://images.unsplash.com/photo-1504868584819-f8e8b4b6d7e3?w=400&h=300&fit=crop',
    timestamp: new Date('2024-01-13T09:15:00'),
    chatCount: 5,
    title: 'UI Components'
  }
]

const plans: Plan[] = [
  {
    name: 'Free',
    price: '$0',
    features: ['10 screenshots/day', '5 AI chats/day', 'Basic support'],
    current: false
  },
  {
    name: 'Pro',
    price: '$9.99',
    features: ['100 screenshots/day', '50 AI chats/day', 'Priority support', 'Advanced AI models'],
    current: true
  },
  {
    name: 'Enterprise',
    price: '$29.99',
    features: ['Unlimited screenshots', 'Unlimited AI chats', '24/7 support', 'Custom integrations'],
    current: false
  }
]

const AskShotDashboard: React.FC = () => {
  const [activeView, setActiveView] = useState<string>('profile')
  const [sidebarCollapsed, setSidebarCollapsed] = useState<boolean>(false)
  const [isDarkMode, setIsDarkMode] = useState<boolean>(true)
  const [historyView, setHistoryView] = useState<'grid' | 'list'>('grid')
  const [selectedScreenshot, setSelectedScreenshot] = useState<Screenshot | null>(null)

  const sidebarVariants = {
    expanded: { width: 280 },
    collapsed: { width: 80 }
  }

  const contentVariants = {
    initial: { opacity: 0, y: 20 },
    animate: { opacity: 1, y: 0 },
    exit: { opacity: 0, y: -20 }
  }

  const ProfileView = () => (
    <motion.div
      variants={contentVariants}
      initial="initial"
      animate="animate"
      exit="exit"
      className="space-y-8"
    >
      <div className="relative">
        <div className="absolute inset-0 bg-gradient-to-r from-blue-500/20 via-purple-500/20 to-cyan-500/20 rounded-2xl blur-xl" />
        <Card className="relative bg-background/80 backdrop-blur-sm border-border/50 p-8">
          <div className="flex items-center space-x-6">
            <div className="relative">
              <Avatar className="w-20 h-20">
                <div className="w-full h-full bg-gradient-to-br from-blue-500 to-purple-600 flex items-center justify-center text-white text-2xl font-bold">
                  JD
                </div>
              </Avatar>
              <div className="absolute -bottom-1 -right-1 w-6 h-6 bg-green-500 rounded-full border-2 border-background" />
            </div>
            <div className="flex-1">
              <h2 className="text-2xl font-bold text-foreground">John Doe</h2>
              <p className="text-muted-foreground">john.doe@example.com</p>
              <Badge className="mt-2 bg-purple-500/20 text-purple-400 border-purple-500/30">
                Pro Member
              </Badge>
            </div>
            <div className="flex items-center space-x-2">
              <Sun className="w-4 h-4 text-muted-foreground" />
              <Switch checked={isDarkMode} onCheckedChange={setIsDarkMode} />
              <Moon className="w-4 h-4 text-muted-foreground" />
            </div>
          </div>
        </Card>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <Card className="bg-background/80 backdrop-blur-sm border-border/50 p-6 hover:shadow-lg hover:shadow-blue-500/10 transition-all duration-300">
          <div className="flex items-center justify-between mb-4">
            <h3 className="text-lg font-semibold text-foreground">Account Security</h3>
            <Lock className="w-5 h-5 text-blue-400" />
          </div>
          <Button variant="outline" className="w-full mb-3 border-border/50 hover:bg-blue-500/10">
            Change Password
          </Button>
          <Button variant="outline" className="w-full text-red-400 border-red-500/30 hover:bg-red-500/10">
            <Trash2 className="w-4 h-4 mr-2" />
            Delete Account
          </Button>
        </Card>

        <Card className="bg-background/80 backdrop-blur-sm border-border/50 p-6 hover:shadow-lg hover:shadow-purple-500/10 transition-all duration-300">
          <div className="flex items-center justify-between mb-4">
            <h3 className="text-lg font-semibold text-foreground">Quick Stats</h3>
            <BarChart3 className="w-5 h-5 text-purple-400" />
          </div>
          <div className="space-y-3">
            <div className="flex justify-between">
              <span className="text-muted-foreground">Screenshots Today</span>
              <span className="text-foreground font-semibold">8/100</span>
            </div>
            <div className="flex justify-between">
              <span className="text-muted-foreground">AI Chats Used</span>
              <span className="text-foreground font-semibold">12/50</span>
            </div>
          </div>
        </Card>
      </div>
    </motion.div>
  )

  const HistoryView = () => (
    <motion.div
      variants={contentVariants}
      initial="initial"
      animate="animate"
      exit="exit"
      className="space-y-6"
    >
      <div className="flex items-center justify-between">
        <h2 className="text-2xl font-bold text-foreground">Screenshot History</h2>
        <div className="flex items-center space-x-2">
          <Button
            variant={historyView === 'grid' ? 'default' : 'outline'}
            size="sm"
            onClick={() => setHistoryView('grid')}
            className="p-2"
          >
            <Grid3X3 className="w-4 h-4" />
          </Button>
          <Button
            variant={historyView === 'list' ? 'default' : 'outline'}
            size="sm"
            onClick={() => setHistoryView('list')}
            className="p-2"
          >
            <List className="w-4 h-4" />
          </Button>
        </div>
      </div>

      <div className={historyView === 'grid' ? 'grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6' : 'space-y-4'}>
        {mockScreenshots.map((screenshot) => (
          <motion.div
            key={screenshot.id}
            whileHover={{ scale: 1.02 }}
            whileTap={{ scale: 0.98 }}
            onClick={() => setSelectedScreenshot(screenshot)}
            className="cursor-pointer"
          >
            <Card className="bg-background/80 backdrop-blur-sm border-border/50 overflow-hidden hover:shadow-lg hover:shadow-cyan-500/10 transition-all duration-300">
              <div className="aspect-video relative overflow-hidden">
                <img
                  src={screenshot.url}
                  alt={screenshot.title}
                  className="w-full h-full object-cover"
                />
                <div className="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent" />
                <div className="absolute bottom-3 left-3 right-3">
                  <h3 className="text-white font-semibold text-sm">{screenshot.title}</h3>
                  <p className="text-white/70 text-xs">
                    {screenshot.timestamp.toLocaleDateString()}
                  </p>
                </div>
                <Badge className="absolute top-3 right-3 bg-cyan-500/20 text-cyan-400 border-cyan-500/30">
                  {screenshot.chatCount} chats
                </Badge>
              </div>
            </Card>
          </motion.div>
        ))}
      </div>

      <AnimatePresence>
        {selectedScreenshot && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 bg-black/80 backdrop-blur-sm z-50 flex items-center justify-center p-4"
            onClick={() => setSelectedScreenshot(null)}
          >
            <motion.div
              initial={{ scale: 0.9, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              exit={{ scale: 0.9, opacity: 0 }}
              className="bg-background border border-border rounded-2xl max-w-4xl w-full max-h-[90vh] overflow-hidden"
              onClick={(e) => e.stopPropagation()}
            >
              <div className="p-6 border-b border-border flex items-center justify-between">
                <h3 className="text-xl font-semibold text-foreground">{selectedScreenshot.title}</h3>
                <div className="flex items-center space-x-2">
                  <Button variant="outline" size="sm">
                    <Download className="w-4 h-4 mr-2" />
                    Download
                  </Button>
                  <Button variant="outline" size="sm" onClick={() => setSelectedScreenshot(null)}>
                    <X className="w-4 h-4" />
                  </Button>
                </div>
              </div>
              <div className="grid grid-cols-1 lg:grid-cols-2 h-[70vh]">
                <div className="p-6">
                  <img
                    src={selectedScreenshot.url}
                    alt={selectedScreenshot.title}
                    className="w-full h-full object-contain rounded-lg"
                  />
                </div>
                <div className="border-l border-border p-6 flex flex-col">
                  <h4 className="text-lg font-semibold text-foreground mb-4 flex items-center">
                    <MessageSquare className="w-5 h-5 mr-2 text-blue-400" />
                    AI Chat Thread
                  </h4>
                  <div className="flex-1 space-y-4 overflow-y-auto">
                    <div className="bg-muted/50 rounded-lg p-3">
                      <p className="text-sm text-foreground">What does this chart show?</p>
                    </div>
                    <div className="bg-blue-500/10 rounded-lg p-3 border border-blue-500/20">
                      <p className="text-sm text-foreground">This chart displays user engagement metrics over time, showing a steady increase in active users with a notable spike in the last quarter.</p>
                    </div>
                  </div>
                  <Button className="mt-4 bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700">
                    Ask Follow-up Question
                  </Button>
                </div>
              </div>
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>
    </motion.div>
  )

  const BillingView = () => (
    <motion.div
      variants={contentVariants}
      initial="initial"
      animate="animate"
      exit="exit"
      className="space-y-8"
    >
      <div className="text-center">
        <h2 className="text-3xl font-bold text-foreground mb-2">Choose Your Plan</h2>
        <p className="text-muted-foreground">Unlock the full potential of AskShot</p>
      </div>

      <Card className="bg-background/80 backdrop-blur-sm border-border/50 p-6">
        <h3 className="text-lg font-semibold text-foreground mb-4">Usage This Month</h3>
        <div className="space-y-4">
          <div>
            <div className="flex justify-between mb-2">
              <span className="text-muted-foreground">Screenshots</span>
              <span className="text-foreground">45/100</span>
            </div>
            <Progress value={45} className="h-2" />
          </div>
          <div>
            <div className="flex justify-between mb-2">
              <span className="text-muted-foreground">AI Chats</span>
              <span className="text-foreground">28/50</span>
            </div>
            <Progress value={56} className="h-2" />
          </div>
        </div>
      </Card>

      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        {plans.map((plan) => (
          <Card
            key={plan.name}
            className={`relative bg-background/80 backdrop-blur-sm border-border/50 p-6 transition-all duration-300 ${
              plan.current
                ? 'ring-2 ring-purple-500 shadow-lg shadow-purple-500/20'
                : 'hover:shadow-lg hover:shadow-blue-500/10'
            }`}
          >
            {plan.current && (
              <Badge className="absolute -top-3 left-1/2 transform -translate-x-1/2 bg-purple-500 text-white">
                Current Plan
              </Badge>
            )}
            <div className="text-center mb-6">
              <div className="flex items-center justify-center mb-2">
                {plan.name === 'Free' && <Zap className="w-6 h-6 text-gray-400" />}
                {plan.name === 'Pro' && <Crown className="w-6 h-6 text-purple-400" />}
                {plan.name === 'Enterprise' && <Building2 className="w-6 h-6 text-blue-400" />}
              </div>
              <h3 className="text-xl font-bold text-foreground">{plan.name}</h3>
              <p className="text-3xl font-bold text-foreground mt-2">
                {plan.price}
                <span className="text-sm text-muted-foreground">/month</span>
              </p>
            </div>
            <ul className="space-y-2 mb-6">
              {plan.features.map((feature, index) => (
                <li key={index} className="flex items-center text-sm text-muted-foreground">
                  <div className="w-1.5 h-1.5 bg-green-500 rounded-full mr-3" />
                  {feature}
                </li>
              ))}
            </ul>
            <Button
              className={`w-full ${
                plan.current
                  ? 'bg-purple-500 hover:bg-purple-600'
                  : 'bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700'
              }`}
              disabled={plan.current}
            >
              {plan.current ? 'Current Plan' : 'Upgrade'}
            </Button>
          </Card>
        ))}
      </div>
    </motion.div>
  )

  const SettingsView = () => (
    <motion.div
      variants={contentVariants}
      initial="initial"
      animate="animate"
      exit="exit"
      className="space-y-8"
    >
      <h2 className="text-2xl font-bold text-foreground">Settings</h2>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
        <Card className="bg-background/80 backdrop-blur-sm border-border/50 p-6">
          <h3 className="text-lg font-semibold text-foreground mb-4 flex items-center">
            <Bell className="w-5 h-5 mr-2 text-blue-400" />
            Notifications
          </h3>
          <div className="space-y-4">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-foreground">Email Notifications</p>
                <p className="text-sm text-muted-foreground">Receive updates via email</p>
              </div>
              <Switch defaultChecked />
            </div>
            <Separator />
            <div className="flex items-center justify-between">
              <div>
                <p className="text-foreground">Browser Notifications</p>
                <p className="text-sm text-muted-foreground">Show desktop notifications</p>
              </div>
              <Switch />
            </div>
          </div>
        </Card>

        <Card className="bg-background/80 backdrop-blur-sm border-border/50 p-6">
          <h3 className="text-lg font-semibold text-foreground mb-4 flex items-center">
            <BarChart3 className="w-5 h-5 mr-2 text-purple-400" />
            Analytics
          </h3>
          <div className="space-y-4">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-foreground">Usage Analytics</p>
                <p className="text-sm text-muted-foreground">Help improve AskShot</p>
              </div>
              <Switch defaultChecked />
            </div>
            <Separator />
            <div className="flex items-center justify-between">
              <div>
                <p className="text-foreground">Performance Metrics</p>
                <p className="text-sm text-muted-foreground">Share performance data</p>
              </div>
              <Switch defaultChecked />
            </div>
          </div>
        </Card>

        <Card className="bg-background/80 backdrop-blur-sm border-border/50 p-6">
          <h3 className="text-lg font-semibold text-foreground mb-4 flex items-center">
            <Brain className="w-5 h-5 mr-2 text-cyan-400" />
            AI Settings
          </h3>
          <div className="space-y-4">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-foreground">Advanced AI Model</p>
                <p className="text-sm text-muted-foreground">Use GPT-4 for better responses</p>
              </div>
              <Switch defaultChecked />
            </div>
            <Separator />
            <div className="flex items-center justify-between">
              <div>
                <p className="text-foreground">Auto-analyze Screenshots</p>
                <p className="text-sm text-muted-foreground">Automatically analyze captured images</p>
              </div>
              <Switch />
            </div>
          </div>
        </Card>

        <Card className="bg-background/80 backdrop-blur-sm border-border/50 p-6">
          <h3 className="text-lg font-semibold text-foreground mb-4 flex items-center">
            <Keyboard className="w-5 h-5 mr-2 text-green-400" />
            Extension Controls
          </h3>
          <div className="space-y-4">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-foreground">Auto-launch Extension</p>
                <p className="text-sm text-muted-foreground">Start with browser</p>
              </div>
              <Switch defaultChecked />
            </div>
            <Separator />
            <div className="flex items-center justify-between">
              <div>
                <p className="text-foreground">Quick Capture Hotkey</p>
                <p className="text-sm text-muted-foreground">Ctrl+Shift+S</p>
              </div>
              <Button variant="outline" size="sm">
                Change
              </Button>
            </div>
          </div>
        </Card>
      </div>
    </motion.div>
  )

  const renderActiveView = () => {
    switch (activeView) {
      case 'profile':
        return <ProfileView />
      case 'history':
        return <HistoryView />
      case 'billing':
        return <BillingView />
      case 'settings':
        return <SettingsView />
      default:
        return <ProfileView />
    }
  }

  return (
    <div className={`min-h-screen ${isDarkMode ? 'dark' : ''} bg-background text-foreground`}>
      <div className="flex">
        {/* Sidebar */}
        <motion.div
          variants={sidebarVariants}
          animate={sidebarCollapsed ? 'collapsed' : 'expanded'}
          className="fixed left-0 top-0 h-full bg-background/95 backdrop-blur-sm border-r border-border/50 z-40"
        >
          <div className="p-6">
            <div className="flex items-center justify-between mb-8">
              {!sidebarCollapsed && (
                <motion.div
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  className="flex items-center space-x-2"
                >
                  <div className="w-8 h-8 bg-gradient-to-br from-blue-500 to-purple-600 rounded-lg flex items-center justify-center">
                    <Eye className="w-4 h-4 text-white" />
                  </div>
                  <span className="text-xl font-bold bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent">
                    AskShot
                  </span>
                </motion.div>
              )}
              <Button
                variant="ghost"
                size="sm"
                onClick={() => setSidebarCollapsed(!sidebarCollapsed)}
                className="p-2"
              >
                {sidebarCollapsed ? <Menu className="w-4 h-4" /> : <X className="w-4 h-4" />}
              </Button>
            </div>

            <nav className="space-y-2">
              {sidebarItems.map((item) => (
                <motion.button
                  key={item.id}
                  whileHover={{ scale: 1.02 }}
                  whileTap={{ scale: 0.98 }}
                  onClick={() => setActiveView(item.id)}
                  className={`w-full flex items-center space-x-3 p-3 rounded-lg transition-all duration-200 ${
                    activeView === item.id
                      ? 'bg-blue-500/20 text-blue-400 border border-blue-500/30'
                      : 'text-muted-foreground hover:text-foreground hover:bg-muted/50'
                  }`}
                >
                  <item.icon className="w-5 h-5 flex-shrink-0" />
                  {!sidebarCollapsed && (
                    <>
                      <span className="flex-1 text-left">{item.label}</span>
                      {item.badge && (
                        <Badge className="bg-purple-500/20 text-purple-400 border-purple-500/30 text-xs">
                          {item.badge}
                        </Badge>
                      )}
                      <ChevronRight className="w-4 h-4" />
                    </>
                  )}
                </motion.button>
              ))}
            </nav>

            {!sidebarCollapsed && (
              <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                className="absolute bottom-6 left-6 right-6"
              >
                <Button className="w-full bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700">
                  Open Extension
                </Button>
              </motion.div>
            )}
          </div>
        </motion.div>

        {/* Main Content */}
        <div
          className={`flex-1 transition-all duration-300 ${
            sidebarCollapsed ? 'ml-20' : 'ml-80'
          }`}
        >
          <div className="p-8">
            <div className="max-w-7xl mx-auto">
              <AnimatePresence mode="wait">
                {renderActiveView()}
              </AnimatePresence>
            </div>
          </div>
        </div>
      </div>

      {/* Background Effects */}
      <div className="fixed inset-0 pointer-events-none">
        <div className="absolute top-1/4 left-1/4 w-96 h-96 bg-blue-500/10 rounded-full blur-3xl" />
        <div className="absolute bottom-1/4 right-1/4 w-96 h-96 bg-purple-500/10 rounded-full blur-3xl" />
        <div className="absolute top-3/4 left-1/2 w-96 h-96 bg-cyan-500/10 rounded-full blur-3xl" />
      </div>
    </div>
  )
}

export default AskShotDashboard

